$(function() {

  const productsIndexBaseUrl = "<%= Rails.application.routes.url_helpers.products_path %>";
  const productsFilterBaseUrl = "<%= Rails.application.routes.url_helpers.products_filtered_index_path categories: [] %>";

  const getSelectedCheckBoxIds = function() {
    return $.map(
      $('.categoryCheckBox:checked'), function(c) {return $(c).data('id')}
    )
  }

  const sendFilterRequest = function(categories, callback) {
    const baseURL = (categories.length > 0)? productsFilterBaseUrl : productsIndexBaseUrl;
    const requestURL = baseURL + "?categories=" + categories.join(' ')
    window.location.replace(requestURL)
  }

  const recursiveCheck = function(id) {
    if(id == '') { return true }
    else {
      const checkBox = $("#checkBox" + id)
      checkBox.prop('checked', true)
      recursiveCheck(checkBox.data('parentId'))
    }
  }

  const recursiveUncheck = function(ids) {
    if(ids.length == 0) { return true }
    else {
      var allChildIds = []
      ids.forEach(function(id) {
        const checkBox = $("#checkBox" + id)
        checkBox.prop('checked', false)
        if(id != '') {
          const children = $(".categoryCheckBox[data-parent-id=" + id + "]")
          const childIds = $.each(children, function(index, child) {
            allChildIds.push($(child).data('id'))
          })
        }
      })
      recursiveUncheck(allChildIds)
    }
  }

  const autoTick = function(event) {
    const checkBox = $(event.target)
    const checkBoxId = checkBox.data('id')
    if(checkBox.prop('checked') == false) {
      recursiveUncheck([checkBoxId])
    } else {
      recursiveCheck(checkBoxId);
    }
    sendFilterRequest(getSelectedCheckBoxIds())
  }

  $('#categoryList .categoryCheckBox').change(autoTick);
})
